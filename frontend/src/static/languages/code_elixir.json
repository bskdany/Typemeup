{
  "name": "code_elixir",
  "ligatures": true,
  "words": [
    "__CALLER__",
    "__DIR__",
    "__ENV__",
    "__MODULE__",
    "__STACKTRACE__",
    "__using__",
    "--",
    "-",
    "->",
    "::",
    ":error",
    ":infinity",
    ":noreply",
    ":ok",
    "!",
    "!=",
    "!==",
    "..",
    "[]",
    "{}",
    "@after_compile",
    "@after_verify",
    "@before_compile",
    "@behaviour",
    "@callback",
    "@deprecated",
    "@doc",
    "@impl",
    "@macrocallback",
    "@moduledoc",
    "@opaque",
    "@optional_callbacks",
    "@spec",
    "@type",
    "@typedoc",
    "@typep",
    "*",
    "**",
    "/",
    "\\\\",
    "&&",
    "%{}",
    "%Date.Range{}",
    "%Date{}",
    "%DateTime{}",
    "%File.Stat{}",
    "%File.Stream{}",
    "%IO.Stream{}",
    "%Macro.Env{}",
    "%MapSet{}",
    "%NaiveDateTime{}",
    "%Stream{}",
    "%Task{}",
    "%Time{}",
    "%URI{}",
    "%Version{}",
    "^",
    "+",
    "++",
    "<-",
    "<",
    "<<>>",
    "<=",
    "<>",
    "=",
    "==",
    "===",
    "=>",
    "=~",
    ">",
    ">=",
    "|",
    "|>",
    "||",
    "~c//",
    "~C//",
    "~D//",
    "~N//",
    "~r//",
    "~s//",
    "~S//",
    "~T//",
    "~U//",
    "~w//",
    "~W//",
    "abs",
    "after",
    "alias!",
    "alias",
    "and",
    "any()",
    "Application",
    "apply",
    "ArgumentError",
    "ArithmeticError",
    "arity()",
    "as_boolean(t)",
    "assert",
    "Atom.to_charlist",
    "Atom.to_string",
    "Atom",
    "atom()",
    "BadArityError",
    "BadBooleanError",
    "BadMapError",
    "Base.decode64",
    "Base.encode16",
    "Base.encode64",
    "Base.url_decode64",
    "Base.url_encode64",
    "Base",
    "binary_part",
    "binary_slice",
    "binary()",
    "binding()",
    "bit_size",
    "bitstring",
    "Bitwise.&&&",
    "Bitwise.<<<",
    "Bitwise.>>>",
    "Bitwise.|||",
    "Bitwise.band",
    "Bitwise.bnot",
    "Bitwise.bor",
    "Bitwise.bsl",
    "Bitwise.bsr",
    "Bitwise.bxor",
    "Bitwise",
    "boolean",
    "break!",
    "breaks()",
    "byte_size",
    "byte()",
    "case",
    "CaseClauseError",
    "catch",
    "cd",
    "ceil",
    "char()",
    "charlist()",
    "clear()",
    "CompileError",
    "cond",
    "CondClauseError",
    "continue()",
    "Date.add",
    "Date.compare",
    "Date.from_gregorian_days",
    "Date.from_iso8601!",
    "Date.from_iso8601",
    "Date.new",
    "Date.to_gregorian_days",
    "Date.to_iso8601",
    "Date.utc_today",
    "Date",
    "DateTime.add",
    "DateTime.compare",
    "DateTime.from_iso8601",
    "DateTime.from_naive!",
    "DateTime.from_unix!",
    "DateTime.from_unix",
    "DateTime.now",
    "DateTime.to_naive",
    "DateTime.to_unix",
    "DateTime.utc_now",
    "DateTime",
    "dbg()",
    "def",
    "defcallback",
    "defdelegate",
    "defexception",
    "defguard",
    "defguardp",
    "defimpl",
    "defmacro",
    "defmacrop",
    "defmodule",
    "defoverridable",
    "defp",
    "defprotocol",
    "defrecord",
    "defrecordp",
    "defstruct",
    "describe",
    "destructure",
    "div",
    "do:",
    "do",
    "DynamicSupervisor.start_child",
    "DynamicSupervisor.start_link",
    "DynamicSupervisor.terminate_child",
    "DynamicSupervisor.which_children",
    "DynamicSupervisor",
    "elem",
    "else",
    "end",
    "Enum.each",
    "Enum.filter",
    "Enum.flat_map",
    "Enum.into",
    "Enum.map",
    "Enum.reduce",
    "Enum.reject",
    "Enum.reverse",
    "Enum.sort",
    "Enum.uniq",
    "Enum",
    "Exception",
    "exit",
    "exports()",
    "false",
    "File.close",
    "File.cp!",
    "File.cwd!",
    "File.dir?",
    "File.exists?",
    "File.mkdir_p!",
    "File.read!",
    "File.read",
    "File.stat!",
    "File.write!",
    "File",
    "Float.ceil",
    "Float.parse",
    "Float.round",
    "Float.to_string",
    "Float",
    "float()",
    "floor",
    "flush()",
    "fn",
    "for",
    "fun()",
    "function_exported?",
    "Function",
    "function()",
    "FunctionClauseError",
    "GenServer.call",
    "GenServer.cast",
    "GenServer.handle_call",
    "GenServer.handle_cast",
    "GenServer.reply",
    "GenServer.start_link",
    "GenServer.stop",
    "GenServer",
    "get_and_update_in",
    "get_in",
    "h()",
    "hd",
    "i()",
    "identifier()",
    "if",
    "import_file_if_available",
    "import_file",
    "import_if_available",
    "import",
    "in",
    "Inspect.Opts",
    "inspect",
    "Integer",
    "integer()",
    "IO.binwrite",
    "IO.chardata_to_string",
    "IO.inspect",
    "IO.iodata_length",
    "IO.iodata_to_binary",
    "IO.puts",
    "IO.read",
    "IO.stream",
    "IO.warn",
    "IO.write",
    "IO",
    "iodata()",
    "iolist()",
    "is_atom",
    "is_binary",
    "is_bitstring",
    "is_boolean",
    "is_exception",
    "is_float",
    "is_function",
    "is_integer",
    "is_list",
    "is_map_key",
    "is_map",
    "is_nil",
    "is_number",
    "is_pid",
    "is_port",
    "is_reference",
    "is_struct",
    "is_tuple",
    "Kernel",
    "KeyError",
    "Keyword.delete",
    "Keyword.drop",
    "Keyword.fetch!",
    "Keyword.fetch",
    "Keyword.get_lazy",
    "Keyword.get_values",
    "Keyword.get",
    "Keyword.has_key?",
    "Keyword.keys",
    "Keyword.keyword?",
    "Keyword",
    "keyword()",
    "keyword(t)",
    "length",
    "List.delete_at",
    "List.delete",
    "List.duplicate",
    "List.first",
    "List.flatten",
    "List.foldr",
    "List.insert_at",
    "List.keydelete",
    "List.keyfind",
    "List.keymember?",
    "List",
    "list()",
    "Logger.debug",
    "Logger.error",
    "Logger.info",
    "Logger.level",
    "Logger.log",
    "Logger.warning",
    "Logger",
    "ls()",
    "macro_exported?",
    "Macro.camelize",
    "Macro.escape",
    "Macro.expand_once",
    "Macro.expand",
    "Macro.prewalk",
    "Macro.quoted_literal?",
    "Macro.to_string",
    "Macro.underscore",
    "Macro.unique_var",
    "Macro.var",
    "Macro",
    "make_ref()",
    "map_size",
    "Map.delete",
    "Map.drop",
    "Map.fetch!",
    "Map.fetch",
    "Map.from_struct",
    "Map.get",
    "Map.has_key?",
    "Map.keys",
    "Map.merge",
    "Map.new",
    "Map",
    "map()",
    "MapSet.delete",
    "MapSet.difference",
    "MapSet.intersection",
    "MapSet.member?",
    "MapSet.new",
    "MapSet.put",
    "MapSet.size",
    "MapSet.to_list",
    "MapSet.union",
    "MapSet",
    "match?",
    "MatchError",
    "max",
    "mfa()",
    "min",
    "Module.concat",
    "Module.get_attribute",
    "Module.put_attribute",
    "Module.register_attribute",
    "Module.split",
    "Module",
    "module()",
    "n()",
    "NaiveDateTime.add",
    "NaiveDateTime.compare",
    "NaiveDateTime.diff",
    "NaiveDateTime.from_gregorian_seconds",
    "NaiveDateTime.from_iso8601!",
    "NaiveDateTime.from_iso8601",
    "NaiveDateTime.new",
    "NaiveDateTime.to_gregorian_seconds",
    "NaiveDateTime.truncate",
    "NaiveDateTime.utc_now",
    "NaiveDateTime",
    "neg_integer()",
    "next()",
    "nil",
    "nl",
    "no_return()",
    "node()",
    "non_neg_integer()",
    "none()",
    "nonempty_binary()",
    "nonempty_bitstring()",
    "nonempty_charlist()",
    "nonempty_list()",
    "nonempty_maybe_improper_list()",
    "not",
    "number()",
    "open()",
    "or",
    "pid()",
    "Plug",
    "pop_in",
    "Port",
    "port()",
    "pos_integer()",
    "Process.demonitor",
    "Process.exit",
    "Process.flag",
    "Process.get",
    "Process.info",
    "Process.link",
    "Process.monitor",
    "Process.put",
    "Process.send_after",
    "Process.unlink",
    "Process",
    "Protocol",
    "put_elem",
    "put_in",
    "pwd()",
    "quote",
    "raise",
    "Range",
    "receive",
    "recompile()",
    "Record",
    "ref",
    "reference()",
    "Regex.compile!",
    "Regex.compile",
    "Regex.escape",
    "Regex.match?",
    "Regex.named_captures",
    "Regex.replace",
    "Regex.run",
    "Regex.scan",
    "Regex",
    "rem",
    "remove_breaks()",
    "require",
    "reraise",
    "rescue",
    "reset_break",
    "respawn()",
    "round",
    "runtime_info()",
    "RuntimeError",
    "self()",
    "send",
    "spawn_link",
    "spawn_monitor",
    "spawn",
    "Stream.chunk_every",
    "Stream.concat",
    "Stream.filter",
    "Stream.flat_map",
    "Stream.map",
    "Stream.reject",
    "Stream.resource",
    "Stream.run",
    "Stream.unfold",
    "Stream.with_index",
    "Stream",
    "String.contains?",
    "String.downcase",
    "String.duplicate",
    "String.jaro_distance",
    "String.length",
    "String.match?",
    "String.next_codepoint",
    "String.pad_trailing",
    "String.replace",
    "String.reverse",
    "String",
    "struct!",
    "struct",
    "struct()",
    "super",
    "Supervisor.child_spec",
    "Supervisor.init",
    "Supervisor.restart_child",
    "Supervisor.start_child",
    "Supervisor.start_link",
    "Supervisor",
    "System.cmd",
    "System.convert_time_unit",
    "System.fetch_env!",
    "System.find_executable",
    "System.get_env",
    "System.halt",
    "System.monotonic_time",
    "System.os_time",
    "System.otp_release",
    "System.schedulers_online",
    "System",
    "tap",
    "Task.async",
    "Task.await",
    "Task.shutdown",
    "Task.start",
    "Task.yield",
    "Task",
    "term()",
    "test",
    "then",
    "throw",
    "Time.compare",
    "Time.from_erl!",
    "Time.from_iso8601!",
    "Time.from_iso8601",
    "Time.new",
    "Time.to_string",
    "Time.truncate",
    "Time",
    "timeout()",
    "tl",
    "to_char_list",
    "to_charlist",
    "to_string",
    "true",
    "trunc",
    "try",
    "TryClauseError",
    "tuple_size",
    "Tuple.append",
    "Tuple.delete_at",
    "Tuple.to_list",
    "Tuple",
    "tuple()",
    "unless",
    "unquote_splicing",
    "unquote",
    "update_in",
    "URI.encode_query",
    "URI.encode_www_form",
    "URI.encode",
    "URI.parse",
    "URI.to_string",
    "URI",
    "use_if_available",
    "use",
    "v()",
    "var!",
    "Version",
    "when",
    "whereami()",
    "with",
    "WithClauseError"
  ]
}
